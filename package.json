{
  "name": "@ubiquity-os/ubiquity-os-kernel",
  "version": "2.5.3",
  "private": false,
  "description": "The kernel for UbiquityOS.",
  "main": "dist/*.js",
  "typings": "dist/index.d.ts",
  "files": [
    "dist"
  ],
  "author": "Ubiquity DAO",
  "license": "MIT",
  "engines": {
    "node": ">=20.10.0"
  },
  "type": "module",
  "scripts": {
    "dev": "run-p worker proxy",
    "predev": "tsx predev.ts",
    "format": "run-s format:*",
    "format:lint": "eslint --fix .",
    "format:prettier": "prettier --write .",
    "format:cspell": "cspell **/*",
    "prepare": "node .husky/install.mjs",
    "deploy": "tsx ./scripts/deploy.ts",
    "deploy-dev": "wrangler deploy --env dev",
    "deploy-production": "wrangler deploy --env production",
    "worker": "wrangler dev --env dev --port 8787",
    "proxy": "tsx src/proxy.ts",
    "knip": "knip --config .github/knip.ts",
    "knip-ci": "knip --no-exit-code --reporter json --config .github/knip.ts",
    "jest:test": "jest --coverage",
    "plugin:hello-world": "tsx tests/__mocks__/hello-world-plugin.ts",
    "setup-kv": "bun --env-file=.dev.vars scripts/setup-kv-namespace.ts",
    "setup": "tsx ./scripts/setup.ts",
    "start:azure": "run-p proxy build:watch start",
    "start:bun": "run-p proxy start",
    "start": "bun --port 8787 --watch --no-clear-screen src/adapters/cloudflare-worker.ts",
    "prestart": "bun run build",
    "build": "tsup",
    "build:watch": "tsup --watch",
    "prebuild": "rimraf dist"
  },
  "keywords": [
    "typescript",
    "template",
    "dao",
    "ubiquity",
    "open-source"
  ],
  "dependencies": {
    "@azure/functions": "^4.6.0",
    "@cfworker/json-schema": "2.0.1",
    "@marplex/hono-azurefunc-adapter": "^1.0.1",
    "@octokit/auth-app": "7.1.5",
    "@octokit/core": "^6.1.4",
    "@octokit/plugin-paginate-rest": "^11.4.3",
    "@octokit/plugin-request-log": "^5.3.1",
    "@octokit/plugin-rest-endpoint-methods": "^13.3.1",
    "@octokit/plugin-retry": "^7.1.4",
    "@octokit/plugin-throttling": "^9.4.0",
    "@octokit/rest": "^21.1.1",
    "@octokit/types": "^13.8.0",
    "@octokit/webhooks": "^13.7.4",
    "@octokit/webhooks-types": "^7.6.1",
    "@sinclair/typebox": "^0.34.30",
    "@ubiquity-os/plugin-sdk": "^3.1.2",
    "console-log-level": "^1.4.1",
    "dotenv": "16.4.5",
    "hono": "^4.6.12",
    "js-yaml": "^4.1.0",
    "libsodium-wrappers": "^0.7.15",
    "openai": "^4.70.2",
    "typebox-validators": "0.3.5",
    "yaml": "^2.7.0"
  },
  "devDependencies": {
    "@cloudflare/workers-types": "4.20240117.0",
    "@commitlint/cli": "19.3.0",
    "@commitlint/config-conventional": "19.2.2",
    "@cspell/dict-node": "5.0.1",
    "@cspell/dict-software-terms": "3.4.6",
    "@cspell/dict-typescript": "3.1.5",
    "@eslint/js": "9.7.0",
    "@inquirer/prompts": "^7.1.0",
    "@jest/globals": "29.7.0",
    "@mswjs/data": "0.16.1",
    "@mswjs/http-middleware": "0.10.1",
    "@swc/core": "1.6.5",
    "@swc/jest": "0.2.36",
    "@types/console-log-level": "^1.4.5",
    "@types/jest": "29.5.12",
    "@types/js-yaml": "^4.0.9",
    "@types/libsodium-wrappers": "^0.7.14",
    "@types/node": "20.14.10",
    "@types/node-rsa": "^1.1.4",
    "cspell": "8.9.0",
    "esbuild": "0.23.0",
    "eslint": "9.7.0",
    "eslint-config-prettier": "9.1.0",
    "eslint-plugin-check-file": "2.8.0",
    "eslint-plugin-prettier": "5.1.3",
    "eslint-plugin-sonarjs": "1.0.3",
    "husky": "9.1.6",
    "jest": "29.7.0",
    "jest-junit": "16.0.0",
    "knip": "5.26.0",
    "lint-staged": "15.2.7",
    "node-rsa": "^1.1.1",
    "npm-run-all": "4.1.5",
    "open": "^10.1.0",
    "ora": "^8.1.1",
    "prettier": "3.3.3",
    "rimraf": "^6.0.1",
    "smee-client": "^2.0.4",
    "toml": "3.0.0",
    "tomlify-j0.4": "3.0.0",
    "ts-node": "^10.9.2",
    "tsup": "^8.3.5",
    "tsx": "4.16.2",
    "typescript": "5.6.3",
    "typescript-eslint": "7.16.0",
    "wrangler": "^3.86.0"
  },
  "lint-staged": {
    "*.ts": [
      "prettier --write",
      "eslint --fix"
    ],
    "src/**.*": [
      "cspell"
    ]
  },
  "commitlint": {
    "extends": [
      "@commitlint/config-conventional"
    ]
  }
}
